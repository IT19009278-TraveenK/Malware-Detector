import os
import pefile
import hashlib
import csv

def extractor(file, tmpdirname, csv_filename):
    file_path = os.path.join(tmpdirname, file.filename)
    file.save(file_path)

    # Open the executable file using PEfile
    pe = pefile.PE(file_path)
    
    # Extract the desired attributes
    machine = pe.FILE_HEADER.Machine
    size_of_optional_header = pe.FILE_HEADER.SizeOfOptionalHeader
    characteristics = pe.FILE_HEADER.Characteristics
    major_linker_version = pe.OPTIONAL_HEADER.MajorLinkerVersion
    minor_linker_version = pe.OPTIONAL_HEADER.MinorLinkerVersion
    size_of_code = pe.OPTIONAL_HEADER.SizeOfCode
    size_of_initialized_data = pe.OPTIONAL_HEADER.SizeOfInitializedData
    size_of_uninitialized_data = pe.OPTIONAL_HEADER.SizeOfUninitializedData
    address_of_entry_point = pe.OPTIONAL_HEADER.AddressOfEntryPoint
    base_of_code = pe.OPTIONAL_HEADER.BaseOfCode
    base_of_data = pe.OPTIONAL_HEADER.BaseOfData
    image_base = pe.OPTIONAL_HEADER.ImageBase
    section_alignment = pe.OPTIONAL_HEADER.SectionAlignment
    file_alignment = pe.OPTIONAL_HEADER.FileAlignment
    major_os_version = pe.OPTIONAL_HEADER.MajorOperatingSystemVersion
    minor_os_version = pe.OPTIONAL_HEADER.MinorOperatingSystemVersion
    major_image_version = pe.OPTIONAL_HEADER.MajorImageVersion
    minor_image_version = pe.OPTIONAL_HEADER.MinorImageVersion
    major_subsystem_version = pe.OPTIONAL_HEADER.MajorSubsystemVersion
    minor_subsystem_version = pe.OPTIONAL_HEADER.MinorSubsystemVersion
    size_of_image = pe.OPTIONAL_HEADER.SizeOfImage
    size_of_headers = pe.OPTIONAL_HEADER.SizeOfHeaders
    checksum = pe.OPTIONAL_HEADER.CheckSum
    subsystem = pe.OPTIONAL_HEADER.Subsystem
    dll_characteristics = pe.OPTIONAL_HEADER.DllCharacteristics
    size_of_stack_reserve = pe.OPTIONAL_HEADER.SizeOfStackReserve
    size_of_stack_commit = pe.OPTIONAL_HEADER.SizeOfStackCommit
    size_of_heap_reserve = pe.OPTIONAL_HEADER.SizeOfHeapReserve
    size_of_heap_commit = pe.OPTIONAL_HEADER.SizeOfHeapCommit
    loader_flags = pe.OPTIONAL_HEADER.LoaderFlags
    number_of_rva_and_sizes = pe.OPTIONAL_HEADER.NumberOfRvaAndSizes

    # Calculate the number of sections
    sections_nb = len(pe.sections)

    # Create a temporary CSV file to save the attributes
    # Calculate additional attributes using a suitable method or library
    csv_filepath = os.path.join(tmpdirname, csv_filename)
    # Create a CSV file and write the attributes
    with open(csv_filepath, "w", newline="") as csv_file:
        csv_writer = csv.writer(csv_file, delimiter='|')
        csv_writer.writerow([
            "Machine", "SizeOfOptionalHeader", "Characteristics",
            "MajorLinkerVersion", "MinorLinkerVersion", "SizeOfCode", "SizeOfInitializedData",
            "SizeOfUninitializedData", "AddressOfEntryPoint", "BaseOfCode", "BaseOfData",
            "ImageBase", "SectionAlignment", "FileAlignment", "MajorOperatingSystemVersion",
            "MinorOperatingSystemVersion", "MajorImageVersion", "MinorImageVersion",
            "MajorSubsystemVersion", "MinorSubsystemVersion", "SizeOfImage", "SizeOfHeaders",
            "CheckSum", "Subsystem", "DllCharacteristics", "SizeOfStackReserve", "SizeOfStackCommit",
            "SizeOfHeapReserve", "SizeOfHeapCommit", "LoaderFlags", "NumberOfRvaAndSizes",
            "SectionsNb",  # Add more header entries
        ])
        csv_writer.writerow([
            machine, size_of_optional_header, characteristics,
            major_linker_version, minor_linker_version, size_of_code, size_of_initialized_data,
            size_of_uninitialized_data, address_of_entry_point, base_of_code, base_of_data,
            image_base, section_alignment, file_alignment, major_os_version, minor_os_version,
            major_image_version, minor_image_version, major_subsystem_version, minor_subsystem_version,
            size_of_image, size_of_headers, checksum, subsystem, dll_characteristics,
            size_of_stack_reserve, size_of_stack_commit, size_of_heap_reserve, size_of_heap_commit,
            loader_flags, number_of_rva_and_sizes, sections_nb,  # Add more attribute values
        ])
    return csv_filepath


