from flask import Flask, request, send_file, jsonify
from flask_cors import CORS
import tempfile
from extractor import extractor
from predictor import analyze_and_predict
from trainer import trainer

app = Flask(__name__)
CORS(app)

@app.route('/upload', methods=['POST'])
def upload_file():
    if 'file' not in request.files:
        return 'No file part'
    
    file = request.files['file']
    if file.filename == '':
        return 'No selected file'

    # Create a temporary directory to save the uploaded file
    with tempfile.TemporaryDirectory() as tmpdirname:
        csv_filename = 'output.csv'
        csv_filepath = extractor(file ,tmpdirname, csv_filename)
        indices = analyze_and_predict(csv_filepath)
        return jsonify(indices=indices.tolist())
    
@app.route('/start-training', methods=['POST'])
def start_training():
    results = trainer()
    return jsonify(results), 202

@app.route('/get-training-results/<task_id>', methods=['GET'])
def get_training_results(task_id):
    task = celery.AsyncResult(task_id)
    if task.state == 'PENDING':
        return jsonify({'status': 'Training is still in progress.'}), 202
    elif task.state == 'SUCCESS':
        return jsonify(task.result), 200
    elif task.state == 'FAILURE':
        return jsonify({'status': 'Training failed.', 'error': str(task.info)}), 500
    else:
        return jsonify({'status': task.state}), 202


if __name__ == "__main__":
    app.run(debug=True)
